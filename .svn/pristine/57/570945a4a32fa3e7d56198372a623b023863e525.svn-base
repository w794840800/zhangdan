package com.beidou.ybz.accountbook.ui;

import android.Manifest;
import android.animation.ValueAnimator;
import android.annotation.SuppressLint;
import android.content.Intent;
import android.os.Bundle;
import android.os.Handler;
import android.os.Message;
import android.os.Parcelable;
import android.support.v4.util.ArrayMap;
import android.support.v7.widget.Toolbar;
import android.view.View;
import android.view.animation.AccelerateDecelerateInterpolator;
import android.view.animation.Animation;
import android.view.animation.AnimationUtils;
import android.view.animation.DecelerateInterpolator;
import android.view.animation.LinearInterpolator;
import android.widget.Button;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;

import com.beidou.ybz.accountbook.R;
import com.beidou.ybz.accountbook.mvp.other.MvpActivity;
import com.beidou.ybz.accountbook.mvp.presenter.CommonPresenter;
import com.beidou.ybz.accountbook.util.ActivityUtils;
import com.beidou.ybz.accountbook.util.ConstactUtil;
import com.beidou.ybz.accountbook.util.ImeUtil;
import com.beidou.ybz.accountbook.util.LogUtils;
import com.google.gson.Gson;
import com.tbruyelle.rxpermissions.RxPermissions;

import java.io.Serializable;
import java.util.ArrayList;
import java.util.Iterator;
import java.util.List;
import java.util.Map;

import butterknife.Bind;
import butterknife.ButterKnife;
import butterknife.OnClick;
import rx.functions.Action1;

public class TongbuActivity extends BaseActivity {
    @Bind(R.id.toolbar)
    Toolbar toolbar;
    @Bind(R.id.btn_login)
    Button btnLogin;
    @Bind(R.id.xuanhzuan_img)
    ImageView xuanhzuanImg;
    @Bind(R.id.linear1)
    LinearLayout linear1;
    @Bind(R.id.linear2)
    LinearLayout linear2;
    @Bind(R.id.fenshu)
    TextView fenshu;
    ValueAnimator anim ;
    private Boolean isgo = false;
//    private Map<String, String> callRecords;
    List<ArrayMap<String, String>> mContacts;//通讯录列表

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_tongbu);
        ButterKnife.bind(this);
        toolbar.setNavigationIcon(R.drawable.back);
        toolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                ImeUtil.hideSoftKeyboard(v);
                ActivityUtils.finishActivity(mActivity);
            }
        });

        linear1.setVisibility(View.VISIBLE);
        linear2.setVisibility(View.GONE);

        permissions();
    }

    void permissions() {
        RxPermissions.getInstance(TongbuActivity.this)
                .request(Manifest.permission.READ_CONTACTS, Manifest.permission.WRITE_CONTACTS)//这里填写所需要的权限
                .subscribe(new Action1<Boolean>() {
                    @Override
                    public void call(Boolean aBoolean) {
                        if (aBoolean) {//true表示获取权限成功（注意这里在android6.0以下默认为true）
//                                    toastShow("成功");
                            isgo = true;
                        } else {
                            isgo = false;
                        }
                    }
                });
    }


    @OnClick(R.id.btn_login)
    public void onViewClicked(View view) {
        switch (view.getId()) {
            case R.id.btn_login://---同步
                if (isgo) {
                    linear1.setVisibility(View.GONE);
                    linear2.setVisibility(View.VISIBLE);
                    rotate();
                    request();
                } else {
                    permissions();
                }
                break;
        }
    }


    Thread thread = new Thread() {
        @Override
        public void run() {
            super.run();
            mContacts = ConstactUtil.getAllCallRecords(TongbuActivity.this);

            handler.sendEmptyMessage(0);//发送消息到handler，通知下载进度
            fenshu.postDelayed(new Runnable() {
                @Override
                public void run() {
                    Intent in = new Intent(TongbuActivity.this, RenmaiActivity.class);
                   /* in.putExtra("list", (Serializable) mContacts);
                    startActivity(in);
                    overridePendingTransition(R.anim.left_in, 0);*/
//                    ActivityUtils.startActivityRightInWithList(TongbuActivity.this, RenmaiActivity.class, mContacts);
                    Gson gson = new Gson();
                    String strJson = gson.toJson(mContacts);
                    in.putExtra("list",strJson);
                    startActivity(in);
//                    finish();
                    overridePendingTransition(R.anim.left_in, 0);
                    LogUtils.loge("-------dddlist------" + strJson);
                    spUtils.setContactJson(strJson);
                    spUtils.setIsSave(true);
//            ActivityUtils.finishActivity(mActivity);
                }
            }, 200);


        }
    };

    @SuppressLint("HandlerLeak")
    private Handler handler = new Handler() {
        @Override
        public void handleMessage(Message msg) {
            super.handleMessage(msg);
            switch (msg.what) {
                case 0:
                    anim.cancel();
                    LogUtils.logd("HandlerHandlerHandler");
                    fenshu.setText("100");
                    break;
            }
        }
    };

    private void request() {
        //一遍同步数据，一遍让进度条走起来
        thread.start();

        anim = ValueAnimator.ofInt(0, 98);
        anim.setDuration(3000);
        anim.setInterpolator(new AccelerateDecelerateInterpolator());
        anim.addUpdateListener(new ValueAnimator.AnimatorUpdateListener() {
            @Override
            public void onAnimationUpdate(ValueAnimator animation) {
                int currentValue = (int) animation.getAnimatedValue();
                fenshu.setText(currentValue + "");
            }
        });
        anim.start();

    }


    private void rotate() {
        //---旋转动画
        Animation animation = AnimationUtils.loadAnimation(this, R.anim.tongbu_animation);
        LinearInterpolator lin = new LinearInterpolator();//设置动画匀速运动
        animation.setInterpolator(lin);
        xuanhzuanImg.startAnimation(animation);
    }


}
